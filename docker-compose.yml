version: "3.8"

services:
  server:
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    container_name: server
    networks:
      - server-nw
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - "8080:8080"
      - "8082:8082"
    env_file:
      - .env

  postgres:
    container_name: ${POSTGRES_HOST}
    networks:
      - server-nw
    image: postgres
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    healthcheck:
        test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
        interval: 10s
        timeout: 3s
        retries: 5

  pgadmin:
    image: 'docker.io/dpage/pgadmin4:latest'
    container_name: pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    ports:
      - "15080:80"
    networks:
      - server-nw
    volumes:
      - pgadmin-data:/var/lib/pgadmin/

  redis:
    image: redis:latest
    container_name: ${REDIS_HOST}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
        echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    networks:
      - server-nw
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5

  grafana:
    image: grafana/grafana-enterprise
    depends_on:
      - prometheus
    container_name: grafana
    networks:
      - server-nw
    volumes:
      - grafana-storage:/var/lib/grafana
    env_file:
      - .env
    ports:
      - '3000:3000'

  prometheus:
    image: prom/prometheus:v2.36.2
    depends_on:
      - server
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - server-nw

networks:
  server-nw:

volumes:
  postgres-data:
  pgadmin-data:
  prometheus_data:
  grafana-storage:
  redis-data:
